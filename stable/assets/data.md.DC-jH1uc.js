import{_ as i,C as n,c as d,o as h,aA as r,j as a,G as s,a as l,w as o}from"./chunks/framework.eanDmm3Z.js";const G=JSON.parse('{"title":"Data","description":"","frontmatter":{},"headers":[],"relativePath":"data.md","filePath":"data.md","lastUpdated":null}'),p={name:"data.md"},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""};function b(g,e,k,m,_,j){const t=n("Badge");return h(),d("div",null,[e[14]||(e[14]=r('<h1 id="Data" tabindex="-1">Data <a class="header-anchor" href="#Data" aria-label="Permalink to &quot;Data {#Data}&quot;">​</a></h1><p>In general, geographic data is classified into two types - <em>vector</em> data and <em>raster</em> data.</p><p>Vector data uses points and line segments to identify locations on the earth, and collects those into &quot;feature collections&quot; with associated values, while raster data uses a series of cells to represent locations on the earth.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>Vector data are usually plotted by <code>lines</code>, <code>scatter</code>, or <code>poly</code>, and raster data are usually plotted by <code>surface</code>, <code>meshimage</code>, or <code>heatmap</code>.</p><h2 id="GeoMakie-sources" tabindex="-1">GeoMakie sources <a class="header-anchor" href="#GeoMakie-sources" aria-label="Permalink to &quot;GeoMakie sources {#GeoMakie-sources}&quot;">​</a></h2><p>GeoMakie.jl provides three functions to get plottable data for your map. These methods provide data from <a href="https://www.naturalearthdata.com/" target="_blank" rel="noreferrer">Natural Earth</a>. You can pass the output straight to Makie plotting functions like <code>lines</code>, <code>poly</code> or <code>image</code> (for <code>earth</code>).</p>',6)),a("details",c,[a("summary",null,[e[0]||(e[0]=a("a",{id:"GeoMakie.coastlines",href:"#GeoMakie.coastlines"},[a("span",{class:"jlbinding"},"GeoMakie.coastlines")],-1)),e[1]||(e[1]=l()),s(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[4]||(e[4]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coastlines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([scale</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 110</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Loads Natural Earth <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> coastline data as GeometryBasics.jl geometries. <code>scale</code> may be one of <code>110</code>, <code>50</code>, or <code>10</code>.</p><p>By default, a scale of 110m is used, for which data is shipped with GeoMakie. To use other scales, NaturalEarth.jl requires an Internet connection to download the relevant data.</p>',3)),s(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...e[2]||(e[2]=[a("a",{href:"https://github.com/MakieOrg/GeoMakie.jl/blob/bd5cb1bb7d71d6c3bc850d349e1b6b7abad95557/src/data.jl#L34-L43",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),e[5]||(e[5]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coastlines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ga</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeoAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Split coastline contours when ga.dest includes a &quot;+lon_0&quot; specification.</p>',2)),s(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...e[3]||(e[3]=[a("a",{href:"https://github.com/MakieOrg/GeoMakie.jl/blob/bd5cb1bb7d71d6c3bc850d349e1b6b7abad95557/src/linesplitting.jl#L12-L15",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),a("details",u,[a("summary",null,[e[6]||(e[6]=a("a",{id:"GeoMakie.land",href:"#GeoMakie.land"},[a("span",{class:"jlbinding"},"GeoMakie.land")],-1)),e[7]||(e[7]=l()),s(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[9]||(e[9]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">land</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Loads Natural Earth <sup class="footnote-ref"><a href="#fn2" id="fnref2:1">[2:1]</a></sup> land polygon data as GeometryBasics.jl geometries. <code>scale</code> may be one of <code>110</code>, <code>50</code>, or <code>10</code>.</p><p>By default, a scale of 110m is used, for which data is shipped with GeoMakie. To use other scales, NaturalEarth.jl requires an Internet connection to download the relevant data.</p>',3)),s(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...e[8]||(e[8]=[a("a",{href:"https://github.com/MakieOrg/GeoMakie.jl/blob/bd5cb1bb7d71d6c3bc850d349e1b6b7abad95557/src/data.jl#L53-L62",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),a("details",f,[a("summary",null,[e[10]||(e[10]=a("a",{id:"GeoMakie.earth",href:"#GeoMakie.earth"},[a("span",{class:"jlbinding"},"GeoMakie.earth")],-1)),e[11]||(e[11]=l()),s(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[13]||(e[13]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">earth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Loads the Natural Earth <sup class="footnote-ref"><a href="#fn2" id="fnref2:2">[2:2]</a></sup> 50m raster illustration of Earth as an image. Doesn&#39;t support <code>scale</code> as of yet, but that&#39;s coming soon!</p>',2)),s(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...e[12]||(e[12]=[a("a",{href:"https://github.com/MakieOrg/GeoMakie.jl/blob/bd5cb1bb7d71d6c3bc850d349e1b6b7abad95557/src/data.jl#L21-L27",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[15]||(e[15]=r('<h2 id="External-sources" tabindex="-1">External sources <a class="header-anchor" href="#External-sources" aria-label="Permalink to &quot;External sources {#External-sources}&quot;">​</a></h2><p>The Julia package ecosystem has several sources which provide geographic data from various sources.</p><ul><li><p><a href="https://github.com/JuliaGeo/NaturalEarth.jl" target="_blank" rel="noreferrer">NaturalEarth.jl</a> - get data from <a href="https://www.naturalearthdata.com/" target="_blank" rel="noreferrer">Natural Earth</a>.</p></li><li><p><a href="https://github.com/JuliaGeo/GADM.jl" target="_blank" rel="noreferrer">GADM.jl</a> - get data from <a href="https://gadm.org/" target="_blank" rel="noreferrer">GADM</a>, a database of political borders for countries, down to state and even province-equivalent level.</p></li><li><p><a href="https://github.com/JuliaGeo/GeoDatasets.jl" target="_blank" rel="noreferrer">GeoDatasets.jl</a> - currently provides access to <a href="https://www.soest.hawaii.edu/pwessel/gshhg/" target="_blank" rel="noreferrer">GSHHG</a>.</p></li><li><p><a href="https://github.com/JuliaGeo/GMT.jl" target="_blank" rel="noreferrer">GMT.jl</a> - provides access to the <a href="https://www.generic-mapping-tools.org/" target="_blank" rel="noreferrer">GMT</a> library, which has quite a bit of data as well as being another geographic plotting library!</p></li><li><p><a href="https://github.com/EcoJulia/RasterDataSources.jl" target="_blank" rel="noreferrer">RasterDataSources.jl</a> - provides access to various raster datasets via <a href="https://github.com/rafaqz/Rasters.jl" target="_blank" rel="noreferrer">Rasters.jl</a>. See their documentation for the full list!</p></li></ul><h2 id="Loading-data-yourself" tabindex="-1">Loading data yourself <a class="header-anchor" href="#Loading-data-yourself" aria-label="Permalink to &quot;Loading data yourself {#Loading-data-yourself}&quot;">​</a></h2><ul><li><p>Vector data loaders:</p><ul><li><p>Native Julia: <a href="https://github.com/JuliaGeo/GeoJSON.jl" target="_blank" rel="noreferrer">GeoJSON.jl</a>, <a href="https://github.com/JuliaGeo/Shapefile.jl" target="_blank" rel="noreferrer">Shapefile.jl</a>, <a href="https://github.com/JuliaGeo/GeoParquet.jl" target="_blank" rel="noreferrer">GeoParquet.jl</a>, <a href="https://github.com/evetion/WellKnownGeometry.jl" target="_blank" rel="noreferrer">WellKnownGeometry.jl</a></p></li><li><p><a href="https://github.com/evetion/GeoDatasets.jl" target="_blank" rel="noreferrer">GeoDatasets.jl</a>, which wraps ArchGDAL.jl to return a DataFrame.</p></li><li><p><a href="https://github.com/yeesian/ArchGDAL.jl" target="_blank" rel="noreferrer">ArchGDAL.jl</a>, and the more primitive <a href="https://github.com/yeesian/GDAL.jl" target="_blank" rel="noreferrer">GDAL.jl</a>, which wraps the <a href="https://gdal.org/" target="_blank" rel="noreferrer">GDAL</a> library (used by R&#39;s <code>sf</code>).</p></li></ul></li><li><p>Raster data loaders</p><ul><li><p><a href="https://github.com/rafaqz/Rasters.jl" target="_blank" rel="noreferrer">Rasters.jl</a>.</p></li><li><p><a href="https://github.com/JuliaGeo/NCDatasets.jl" target="_blank" rel="noreferrer">NCDatasets.jl</a></p></li><li><p><a href="https://github.com/yeesian/ArchGDAL.jl" target="_blank" rel="noreferrer">ArchGDAL.jl</a> (used by Rasters.jl as well)</p></li></ul></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.esri.com/content/dam/esrisites/en-us/media/pdf/teach-with-gis/raster-faster.pdf" target="_blank" rel="noreferrer">https://www.esri.com/content/dam/esrisites/en-us/media/pdf/teach-with-gis/raster-faster.pdf</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Made with Natural Earth. Free vector and raster map data at <a href="https://www.naturalearth.com" target="_blank" rel="noreferrer">naturalearthdata.com</a>. <a href="#fnref2" class="footnote-backref">↩︎</a> <a href="#fnref2:1" class="footnote-backref">↩︎</a> <a href="#fnref2:2" class="footnote-backref">↩︎</a></p></li></ol></section>',7))])}const w=i(p,[["render",b]]);export{G as __pageData,w as default};
