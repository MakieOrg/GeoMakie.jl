import{_ as a,o as i,c as n,a5 as p}from"./chunks/framework.oJIlFRzD.js";const t="/previews/PR289/assets/rwiWrkBo9f.B--IxnLx.png",l="/previews/PR289/assets/wqvmijn.BFCdBZkB.png",e="/previews/PR289/assets/fqmspoh.DDcapHGj.png",h="/previews/PR289/assets/rpfkocp.BqYpJV87.png",F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"examples/raster_warping_masking.md","filePath":"examples/raster_warping_masking.md","lastUpdated":null}'),k={name:"examples/raster_warping_masking.md"};function d(r,s,g,o,E,c){return i(),n("div",null,s[0]||(s[0]=[p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```@cardmeta</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Title = &quot;Raster warping, masking, plotting&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Description = &quot;Semi involved example showing raster warping and masking, and plotting matrix lookup gridded data on a globe.&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Cover = fig</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>`@cardmeta Title = &#39;Raster warping, masking, plotting&#39; Description = &#39;Semi involved example showing raster warping and masking, and plotting matrix lookup gridded data on a globe.&#39; Cover = fig`</span></span></code></pre></div><p>In this example, we want to show how you can create manipulate rasters for the purpose of visualization.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie, GeoMakie</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, ArchGDAL,NaturalEarth, FileIO</span></span></code></pre></div><h2 id="Background-setup" tabindex="-1">Background setup <a class="header-anchor" href="#Background-setup" aria-label="Permalink to &quot;Background setup {#Background-setup}&quot;">​</a></h2><img src="'+t+`"><p>Set up the background. First, load the image,</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blue_marble_image </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FileIO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileIO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://eoimages.gsfc.nasa.gov/images/imagerecords/76000/76487/world.200406.3x5400x2700.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotr90 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RGBA{Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">N0f8}</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>5400×2700 Array{RGBA{N0f8},2} with eltype RGBA{FixedPointNumbers.N0f8}:</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)  …  RGBA{N0f8}(0.043,0.055,0.114,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.043,0.055,0.114,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.047,0.059,0.118,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.043,0.055,0.114,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.039,0.051,0.11,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)  …  RGBA{N0f8}(0.039,0.051,0.11,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.039,0.051,0.11,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.039,0.051,0.11,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.918,0.918,0.918,1.0)     RGBA{N0f8}(0.039,0.051,0.11,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.918,0.918,0.918,1.0)     RGBA{N0f8}(0.039,0.051,0.11,1.0)</span></span>
<span class="line"><span> ⋮                                  ⋱  </span></span>
<span class="line"><span> RGBA{N0f8}(0.925,0.925,0.925,1.0)     RGBA{N0f8}(0.49,0.502,0.522,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.502,0.502,0.533,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.502,0.502,0.533,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.502,0.502,0.533,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)  …  RGBA{N0f8}(0.502,0.502,0.533,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.498,0.502,0.522,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.498,0.502,0.522,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.502,0.506,0.525,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.929,0.929,0.929,1.0)     RGBA{N0f8}(0.506,0.51,0.529,1.0)</span></span></code></pre></div><p>Your other choice is:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blue_marble_image </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeoMakie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">earth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotr90 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RGBA{Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">N0f8}</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>720×360 Array{RGBA{N0f8},2} with eltype RGBA{FixedPointNumbers.N0f8}:</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)  …  RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)  …  RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.953,0.965,1.0)     RGBA{N0f8}(0.467,0.663,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.953,0.965,1.0)     RGBA{N0f8}(0.467,0.663,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.945,0.953,0.965,1.0)     RGBA{N0f8}(0.467,0.663,0.8,1.0)</span></span>
<span class="line"><span> ⋮                                  ⋱  </span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.961,1.0)     RGBA{N0f8}(0.463,0.659,0.796,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.961,1.0)     RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.961,1.0)     RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.961,1.0)     RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.961,1.0)  …  RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.961,1.0)     RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.659,0.796,1.0)</span></span>
<span class="line"><span> RGBA{N0f8}(0.941,0.949,0.965,1.0)     RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span></code></pre></div><p>For the purposes of this example, we&#39;ll use the Natural Earth background image, since it&#39;s significantly smaller and the poor CI machine can&#39;t handle huge images.</p><p>We wrap the image as a Raster for easy masking.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blue_marble_raster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    blue_marble_image, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># the contents</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ( </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># the dimensions go in this tuple.  \`X\` and \`Y\` are defined by the Rasters ecosystem.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blue_marble_image, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blue_marble_image, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭────────────────────────────────────────────────╮</span></span>
<span class="line"><span>│ 720×360 Raster{RGBA{FixedPointNumbers.N0f8},2} │</span></span>
<span class="line"><span>├────────────────────────────────────────────────┴─────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Float64} LinRange{Float64}(-180.0, 180.0, 720) ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Float64} LinRange{Float64}(-90.0, 90.0, 360) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 180.0), Y = (-90.0, 90.0))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →    …  90.0</span></span>
<span class="line"><span> -180.0         RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> -179.499       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> -178.999       RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span> -178.498       RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span>    ⋮      ⋱   ⋮</span></span>
<span class="line"><span>  177.997       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span>  178.498       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span>  178.999       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span>  179.499       RGBA{N0f8}(0.463,0.659,0.796,1.0)</span></span>
<span class="line"><span>  180.0    …    RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span></code></pre></div><p>Construct a mask of land using Natural Earth land polygons</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_mask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boolmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NaturalEarth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">naturalearth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;land&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); to </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blue_marble_raster)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭────────────────────────╮</span></span>
<span class="line"><span>│ 720×360 Raster{Bool,2} │</span></span>
<span class="line"><span>├────────────────────────┴─────────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Float64} LinRange{Float64}(-180.0, 180.0, 720) ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Float64} LinRange{Float64}(-90.0, 90.0, 360) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 180.0), Y = (-90.0, 90.0))</span></span>
<span class="line"><span>  missingval: false</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →    -90.0  -89.4986  -88.9972  …  88.4958  88.9972  89.4986  90.0</span></span>
<span class="line"><span> -180.0      0      1         1           0        0        0        0</span></span>
<span class="line"><span> -179.499    0      1         1           0        0        0        0</span></span>
<span class="line"><span> -178.999    0      1         1           0        0        0        0</span></span>
<span class="line"><span> -178.498    0      1         1           0        0        0        0</span></span>
<span class="line"><span>    ⋮                                 ⋱                              ⋮</span></span>
<span class="line"><span>  177.997    0      1         1           0        0        0        0</span></span>
<span class="line"><span>  178.498    0      1         1           0        0        0        0</span></span>
<span class="line"><span>  178.999    0      1         1           0        0        0        0</span></span>
<span class="line"><span>  179.499    0      1         1           0        0        0        0</span></span>
<span class="line"><span>  180.0      0      0         0       …   0        0        0        0</span></span></code></pre></div><p>Now, create a new raster as a copy of the background image, and set the values of all sea areas to be transparent.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_raster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> deepcopy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blue_marble_raster)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_raster[(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(land_mask)] .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RGBA{Makie.Colors.N0f8}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_raster</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭────────────────────────────────────────────────╮</span></span>
<span class="line"><span>│ 720×360 Raster{RGBA{FixedPointNumbers.N0f8},2} │</span></span>
<span class="line"><span>├────────────────────────────────────────────────┴─────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Float64} LinRange{Float64}(-180.0, 180.0, 720) ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Float64} LinRange{Float64}(-90.0, 90.0, 360) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 180.0), Y = (-90.0, 90.0))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →    -90.0                           …  90.0</span></span>
<span class="line"><span> -180.0       RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span> -179.499     RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span> -178.999     RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span> -178.498     RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span>    ⋮                                      ⋱   ⋮</span></span>
<span class="line"><span>  177.997     RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span>  178.498     RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span>  178.999     RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span>  179.499     RGBA{N0f8}(0.0,0.0,0.0,0.0)       RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span>
<span class="line"><span>  180.0       RGBA{N0f8}(0.0,0.0,0.0,0.0)  …    RGBA{N0f8}(0.0,0.0,0.0,0.0)</span></span></code></pre></div><p>Do the same for the sea.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sea_raster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> deepcopy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blue_marble_raster)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sea_raster[land_mask] .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RGBA{Makie.Colors.N0f8}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sea_raster</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭────────────────────────────────────────────────╮</span></span>
<span class="line"><span>│ 720×360 Raster{RGBA{FixedPointNumbers.N0f8},2} │</span></span>
<span class="line"><span>├────────────────────────────────────────────────┴─────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Float64} LinRange{Float64}(-180.0, 180.0, 720) ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Float64} LinRange{Float64}(-90.0, 90.0, 360) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 180.0), Y = (-90.0, 90.0))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →    …  90.0</span></span>
<span class="line"><span> -180.0         RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> -179.499       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span> -178.999       RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span> -178.498       RGBA{N0f8}(0.463,0.663,0.8,1.0)</span></span>
<span class="line"><span>    ⋮      ⋱   ⋮</span></span>
<span class="line"><span>  177.997       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span>  178.498       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span>  178.999       RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span>
<span class="line"><span>  179.499       RGBA{N0f8}(0.463,0.659,0.796,1.0)</span></span>
<span class="line"><span>  180.0    …    RGBA{N0f8}(0.463,0.659,0.8,1.0)</span></span></code></pre></div><h2 id="Constructing-fake-data" tabindex="-1">Constructing fake data <a class="header-anchor" href="#Constructing-fake-data" aria-label="Permalink to &quot;Constructing fake data {#Constructing-fake-data}&quot;">​</a></h2><p>Now, we construct fake data. First, we create a matrix of values.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">field </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cosd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>361×181 Matrix{Float64}:</span></span>
<span class="line"><span> -2.63212  -2.59879  -2.56545  …  3.26788  3.30121  3.33455  3.36788</span></span>
<span class="line"><span> -2.63206  -2.59873  -2.5654      3.26794  3.30127  3.3346   3.36794</span></span>
<span class="line"><span> -2.6319   -2.59856  -2.56523     3.2681   3.30144  3.33477  3.3681</span></span>
<span class="line"><span> -2.63162  -2.59828  -2.56495     3.26838  3.30172  3.33505  3.36838</span></span>
<span class="line"><span> -2.63122  -2.59789  -2.56456     3.26878  3.30211  3.33544  3.36878</span></span>
<span class="line"><span> -2.63072  -2.59738  -2.56405  …  3.26928  3.30262  3.33595  3.36928</span></span>
<span class="line"><span> -2.6301   -2.59677  -2.56343     3.2699   3.30323  3.33657  3.3699</span></span>
<span class="line"><span> -2.62937  -2.59603  -2.5627      3.27063  3.30397  3.3373   3.37063</span></span>
<span class="line"><span> -2.62852  -2.59519  -2.56186     3.27148  3.30481  3.33814  3.37148</span></span>
<span class="line"><span> -2.62756  -2.59423  -2.5609      3.27244  3.30577  3.3391   3.37244</span></span>
<span class="line"><span>  ⋮                            ⋱                             ⋮</span></span>
<span class="line"><span> -2.62852  -2.59519  -2.56186     3.27148  3.30481  3.33814  3.37148</span></span>
<span class="line"><span> -2.62937  -2.59603  -2.5627      3.27063  3.30397  3.3373   3.37063</span></span>
<span class="line"><span> -2.6301   -2.59677  -2.56343     3.2699   3.30323  3.33657  3.3699</span></span>
<span class="line"><span> -2.63072  -2.59738  -2.56405  …  3.26928  3.30262  3.33595  3.36928</span></span>
<span class="line"><span> -2.63122  -2.59789  -2.56456     3.26878  3.30211  3.33544  3.36878</span></span>
<span class="line"><span> -2.63162  -2.59828  -2.56495     3.26838  3.30172  3.33505  3.36838</span></span>
<span class="line"><span> -2.6319   -2.59856  -2.56523     3.2681   3.30144  3.33477  3.3681</span></span>
<span class="line"><span> -2.63206  -2.59873  -2.5654      3.26794  3.30127  3.3346   3.36794</span></span>
<span class="line"><span> -2.63212  -2.59879  -2.56545  …  3.26788  3.30121  3.33455  3.36788</span></span></code></pre></div><p>Then, we wrap it in a Raster. This is now gridded data, along the specified <code>X</code> and <code>Y</code> dimensions. Note the <code>missingval = NaN</code> keyword argument. This is used to indicate that if the raster does have missing values, they should be represented as <code>NaN</code>, and not 0, for example.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(field, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(field, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(field, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))); missingval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────────╮</span></span>
<span class="line"><span>│ 361×181 Raster{Float64,2} │</span></span>
<span class="line"><span>├───────────────────────────┴──────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Float64} LinRange{Float64}(-30.0, 30.0, 361) ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Float64} LinRange{Float64}(-5.0, 5.0, 181) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-30.0, 30.0), Y = (-5.0, 5.0))</span></span>
<span class="line"><span>  missingval: NaN</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>   ↓ →     -5.0      -4.94444  …  4.83333  4.88889  4.94444  5.0</span></span>
<span class="line"><span> -30.0     -2.63212  -2.59879     3.26788  3.30121  3.33455  3.36788</span></span>
<span class="line"><span> -29.8333  -2.63206  -2.59873     3.26794  3.30127  3.3346   3.36794</span></span>
<span class="line"><span> -29.6667  -2.6319   -2.59856     3.2681   3.30144  3.33477  3.3681</span></span>
<span class="line"><span> -29.5     -2.63162  -2.59828     3.26838  3.30172  3.33505  3.36838</span></span>
<span class="line"><span>   ⋮                           ⋱                    ⋮        </span></span>
<span class="line"><span>  29.3333  -2.63122  -2.59789     3.26878  3.30211  3.33544  3.36878</span></span>
<span class="line"><span>  29.5     -2.63162  -2.59828     3.26838  3.30172  3.33505  3.36838</span></span>
<span class="line"><span>  29.6667  -2.6319   -2.59856     3.2681   3.30144  3.33477  3.3681</span></span>
<span class="line"><span>  29.8333  -2.63206  -2.59873  …  3.26794  3.30127  3.3346   3.36794</span></span>
<span class="line"><span>  30.0     -2.63212  -2.59879     3.26788  3.30121  3.33455  3.36788</span></span></code></pre></div><p>We rotate the raster and then translate it to approximate the position in the image.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rotmat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotmatrix2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):</span></span>
<span class="line"><span>  0.809017  0.587785</span></span>
<span class="line"><span> -0.587785  0.809017</span></span></code></pre></div><p>We warp the raster by the parameters below. This is in total basically rotating the raster by the rotation matrix <code>rotmat</code>, and then translating it by 30 units in the x direction and -36 in the y direction.</p><p>This is where the <code>missingval</code> keyword argument comes in. If we didn&#39;t have it, the values that are now <code>NaN</code> because they are outside the original raster would be filled by <code>0</code>, which is not what we want.</p><p>Rasters.warp is pretty much a wrapper around <a href="https://gdal.org/en/latest/programs/gdalwarp.html" target="_blank" rel="noreferrer">GDAL&#39;s <code>gdalwarp</code> program</a>, so all of the options are available. It&#39;s incredibly versatile and flexible but is a bit tricky to use.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transformed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">warp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ras,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;r&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bilinear&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ct&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #= see https://gdal.org/en/latest/programs/gdalwarp.html =#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        +proj=pipeline</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        +step +proj=affine +xoff=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(30)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +yoff=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +s11=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(rotmat[1,1])</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +s12=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(rotmat[1,2])</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +s21=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(rotmat[2,1])</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +s22=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(rotmat[2,2])</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;s_srs&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=longlat +datum=WGS84 +type=crs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;t_srs&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=longlat +datum=WGS84 +type=crs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────────╮</span></span>
<span class="line"><span>│ 361×288 Raster{Float64,2} │</span></span>
<span class="line"><span>├───────────────────────────┴──────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} LinRange{Float64}(2.7823459563862345, 57.16214601458978, 361) ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Projected{Float64} LinRange{Float64}(-57.678215207187165, -14.32543016078601, 288) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span>  Metadata{Rasters.GDALsource} of Dict{String, Any} with 4 entries:</span></span>
<span class="line"><span>  &quot;units&quot;    =&gt; &quot;&quot;</span></span>
<span class="line"><span>  &quot;offset&quot;   =&gt; 0.0</span></span>
<span class="line"><span>  &quot;filepath&quot; =&gt; &quot;/vsimem/tmp&quot;</span></span>
<span class="line"><span>  &quot;scale&quot;    =&gt; 1.0</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (2.7823459563862345, 57.16214601458978), Y = (-57.678215207187165, -14.32543016078601))</span></span>
<span class="line"><span>  missingval: NaN</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;unknown&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Longitude&quot;,EAST],AXIS[&quot;Latitude&quot;,NORTH]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>  ↓ →      -57.6782  -57.5272  -57.3761  …  -14.6275  -14.4765  -14.3254</span></span>
<span class="line"><span>  2.78235  NaN       NaN       NaN          NaN       NaN       NaN</span></span>
<span class="line"><span>  ⋮                                      ⋱                      </span></span>
<span class="line"><span> 57.1621   NaN       NaN       NaN          NaN       NaN       NaN</span></span></code></pre></div><h2 id="Plotting-the-data" tabindex="-1">Plotting the data <a class="header-anchor" href="#Plotting-the-data" aria-label="Permalink to &quot;Plotting the data {#Plotting-the-data}&quot;">​</a></h2><p>We use an orthographic GeoAxis to show the data. First, we create the figure and the axis,</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; dest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=ortho +lon_0=0 +lat_0=0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GeoAxis()</span></span></code></pre></div><p>Then, we plot the sea and land rasters. These are our background images.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sea_plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> meshimage!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, sea_raster; source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=longlat +datum=WGS84 +type=crs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, npoints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> meshimage!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, land_raster; source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=longlat +datum=WGS84 +type=crs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, npoints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Plot{GeoMakie.meshimage, Tuple{MakieCore.EndPoints{Float64}, MakieCore.EndPoints{Float64}, Matrix{RGBA{FixedPointNumbers.N0f8}}}}</span></span></code></pre></div><p>Finally, we plot the transformed data.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> surface!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, transformed; shading </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NoShading)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Surface{Tuple{Vector{Float64}, Vector{Float64}, Matrix{Float32}}}</span></span></code></pre></div><p>Get the land plot above all other plots in the geoaxis.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(land_plot, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>3-element Vec{3, Float64} with indices SOneTo(3):</span></span>
<span class="line"><span> 0.0</span></span>
<span class="line"><span> 0.0</span></span>
<span class="line"><span> 1.0</span></span></code></pre></div><p>Display the figure...</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+l+`" alt=""></p><p>For extra credit, we&#39;ll find the center of the raster and transform the orthographic projection to be centered on it:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Statistics</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xy_matrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DimensionalData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DimPoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(transformed) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> collect</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">center_x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(xy_matrix))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">center_y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(xy_matrix))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-36.00182268398659</span></span></code></pre></div><p>We&#39;ll use the <code>ortho</code> projection, which is centered on the point we just found.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dest[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=ortho +lon_0=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(center_x)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +lat_0=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(center_y)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;+proj=ortho +lon_0=29.972245985488005 +lat_0=-36.00182268398659&quot;</span></span></code></pre></div><p>Somehow, the limits are set to the wrong thing, so we&#39;ll set them manually and let the axis take care of it.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">limits[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+e+`" alt=""></p><h2 id="Plotting-on-the-3D-globe" tabindex="-1">Plotting on the 3D globe <a class="header-anchor" href="#Plotting-on-the-3D-globe" aria-label="Permalink to &quot;Plotting on the 3D globe {#Plotting-on-the-3D-globe}&quot;">​</a></h2><p>Super bonus points: plot the data on the globe</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Geodesy</span></span></code></pre></div><p>fig = Figure(size = (1000, 1000));</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LScene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sea_plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> meshimage!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, sea_raster; npoints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> meshimage!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, land_raster; npoints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> surface!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, transformed; shading </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NoShading)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z_level[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # this means raising land by 1 km over the sea!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sea_plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transformation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform_func[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Geodesy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ECEFfromLLA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Geodesy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WGS84</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">land_plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transformation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform_func[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Geodesy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ECEFfromLLA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Geodesy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WGS84</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transformation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform_func[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Geodesy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ECEFfromLLA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Geodesy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WGS84</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig2</span></span></code></pre></div><p><img src="`+h+'" alt=""></p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>',73)]))}const u=a(k,[["render",d]]);export{F as __pageData,u as default};
