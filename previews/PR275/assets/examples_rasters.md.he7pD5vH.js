import{_ as a,c as i,a5 as t,o as e}from"./chunks/framework.Clkz7woX.js";const n="/previews/PR275/assets/7Y5Nzvf2ZEc.DhRs-Wmt.png",p="/previews/PR275/assets/urhpufy.BP3LvzV5.png",l="/previews/PR275/assets/tvfrudz.syI6tqVF.png",h="/previews/PR275/assets/eecisxt.D8tHlgaf.png",r="/previews/PR275/assets/zbridwx.Dizir8Ht.png",o="/previews/PR275/assets/staqtpo.Ca3MeWWs.png",k="/previews/PR275/assets/taksgoh.M8DOJIKm.png",v=JSON.parse('{"title":"Raster data (with Rasters.jl)","description":"","frontmatter":{},"headers":[],"relativePath":"examples/rasters.md","filePath":"examples/rasters.md","lastUpdated":null}'),d={name:"examples/rasters.md"};function g(c,s,u,E,y,f){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="Raster-data-(with-Rasters.jl)" tabindex="-1">Raster data (with Rasters.jl) <a class="header-anchor" href="#Raster-data-(with-Rasters.jl)" aria-label="Permalink to &quot;Raster data (with Rasters.jl) {#Raster-data-(with-Rasters.jl)}&quot;">​</a></h1><img src="'+n+`"><p><a href="https://github.com/rafaqz/Rasters.jl" target="_blank" rel="noreferrer">Rasters.jl</a> is a Julia package designed for working with raster data. It provides tools to read, write, and manipulate raster datasets, which are commonly used in geographic information systems (GIS), remote sensing, and similar fields where grid data is prevalent. It&#39;s built on top of <a href="https://github.com/rafaqz/DimensionalData.jl" target="_blank" rel="noreferrer">DimensionalData.jl</a>, which also underpins e.g. <a href="https://github.com/JuliaDataCubes/YAXArrays.jl" target="_blank" rel="noreferrer">YAXArrays.jl</a>.</p><p>In general, any input that works with base Makie will work with GeoMakie in a GeoAxis!</p><p>First, we&#39;ll load Rasters.jl, RasterDataSources.jl which provides access to common datasets, and ArchGDAL.jl which Rasters.jl depends on to read files.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>WARNING: Method definition convert_arguments(MakieCore.CellGrid, Rasters.AbstractRaster{var&quot;#s115&quot;, 2, D, A} where A where D where var&quot;#s115&quot;) in module RastersMakieExt at /home/runner/.julia/packages/Rasters/wLfXD/ext/RastersMakieExt/plotrecipes.jl:304 overwritten at /home/runner/.julia/packages/Rasters/wLfXD/ext/RastersMakieExt/plotrecipes.jl:308.</span></span>
<span class="line"><span>ERROR: Method overwriting is not permitted during Module precompilation. Use \`__precompile__(false)\` to opt-out of precompilation.</span></span></code></pre></div><p>We&#39;ll also load GeoMakie and CairoMakie to plot the data.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeoMakie, CairoMakie</span></span></code></pre></div><p>First, we can load a Raster from the <a href="https://www.earthenv.org" target="_blank" rel="noreferrer">EarthEnv</a> project, which represents habitat or ecosystem heterogeneity.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:homogeneity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># habitat homogeneity to neighbouring pixel</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────────────────────╮</span></span>
<span class="line"><span>│ 1728×696 Raster{UInt16,2} homogeneity │</span></span>
<span class="line"><span>├───────────────────────────────────────┴──────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} LinRange{Float64}(-180.0, 179.79166666666669, 1728) ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} LinRange{Float64}(84.79166666666667, -60.0, 696) ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span>  Metadata{Rasters.GDALsource} of Dict{String, Any} with 4 entries:</span></span>
<span class="line"><span>  &quot;units&quot;    =&gt; &quot;&quot;</span></span>
<span class="line"><span>  &quot;offset&quot;   =&gt; 0.0</span></span>
<span class="line"><span>  &quot;filepath&quot; =&gt; &quot;/home/runner/.julia/artifacts/EarthEnv/HabitatHeterogeneity/25…</span></span>
<span class="line"><span>  &quot;scale&quot;    =&gt; 1.0</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 180.00000000000003), Y = (-60.0, 85.0))</span></span>
<span class="line"><span>  missingval: 0xffff</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →        84.7917      84.5833  …     -59.5833     -59.7917     -60.0</span></span>
<span class="line"><span> -180.0    0xffff       0xffff          0xffff       0xffff       0xffff</span></span>
<span class="line"><span>    ⋮                                ⋱                    ⋮       </span></span>
<span class="line"><span>  179.792  0xffff       0xffff          0xffff       0xffff       0xffff</span></span></code></pre></div><p>Let&#39;s take a look at this in regular Makie first:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ras; axis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; aspect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DataAspect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span></code></pre></div><p><img src="`+p+`" alt=""></p><p>We can plot this in any projection:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); ga </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> heatmap!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ga, ras)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+l+`" alt=""></p><p>We can also change the projection arbitrarily:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ga</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dest[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=ortho +lon_0=19 +lat_0=72&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+h+`" alt=""></p><p>and all other Makie keyword arguments also apply!</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colormap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :isoluminant_cgo_70_c39_n256</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+r+`" alt=""></p><p>You can also use other recipes like surface:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); ga </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> surface!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ga, ras)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+o+`" alt=""></p><p>This looks a bit strange - but you can always disable shading:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shading </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NoShading</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+k+'" alt=""></p><p>See also the Geostationary image and Multiple CRS examples, where we explore how to plot data in different projections.</p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>',33)]))}const b=a(d,[["render",g]]);export{v as __pageData,b as default};
