import{_ as e,c as t,o as i,a6 as o}from"./chunks/framework.DEE_j1Zo.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"GeoMakie","text":"","tagline":"Geographic plots for Makie","image":{"src":"/logo.png","alt":"Makie logo deformed on an Interrupted Goode Homolosine projection."},"actions":[{"theme":"brand","text":"Introduction","link":"/introduction"},{"theme":"alt","text":"View on Github","link":"https://github.com/MakieOrg/GeoMakie.jl"},{"theme":"alt","text":"Examples","link":"/examples"}]},"features":[{"icon":"<img width=\\"64\\" height=\\"64\\" src=\\"https://rawcdn.githack.com/JuliaLang/julia-logo-graphics/f3a09eb033b653970c5b8412e7755e3c7d78db9e/images/juliadots.iconset/icon_512x512.png\\" alt=\\"Julia code\\"/>","title":"Pure Julia code","details":"Fast, understandable, extensible functions","link":"/introduction"},{"icon":"<img width=\\"64\\" height=\\"64\\" src=\\"https://fredrikekre.github.io/Literate.jl/v2/assets/logo.png\\" />","title":"Literate programming","details":"Documented source code with examples!","link":"/source/methods/clipping/cut"},{"icon":"<img width=\\"64\\" height=\\"64\\" src=\\"https://rawcdn.githack.com/JuliaGeo/juliageo.github.io/4788480c2a5f7ae36df67a4b142e3a963024ac91/img/juliageo.svg\\" />","title":"Full integration with GeoInterface","details":"Use any GeoInterface.jl-compatible geometry","link":"https://juliageo.org/GeoInterface.jl/stable"}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),a={name:"index.md"},n=o('<p style="margin-bottom:2cm;"></p><div class="vp-doc" style="width:80%;margin:auto;"><h1> What is GeoMakie.jl? </h1><p>GeoMakie.jl is a Julia package for plotting geospatial data on a given map projection. It is built on top of the <a href="https://docs.makie.org/stable/" target="_blank" rel="noreferrer">Makie.jl plotting ecosystem</a>.</p><p>GeoMakie provides a <code>GeoAxis</code> type which handles CRS and projections, and various utilities and integrations to handle plotting geometries. <code>GeoAxis</code> should work seamlessly with any Makie plotting function, and can be used as a drop-in replacement for <code>Makie.Axis</code>.</p></div>',2),s=[n];function l(c,r,d,p,g,h){return i(),t("div",null,s)}const _=e(a,[["render",l]]);export{u as __pageData,_ as default};
