import{_ as a,c as i,o as t,aA as e}from"./chunks/framework.DxuzgB2A.js";const n="/previews/PR319/assets/Lc8ayoUxSMQ.Dnt2BXe8.png",p="/previews/PR319/assets/fsdaxtl.DHEZ4LBu.png",l="/previews/PR319/assets/xbanmwz.N8rUsiJ5.png",h="/previews/PR319/assets/mbheldg.BDamaGct.png",r="/previews/PR319/assets/qoezntm.bxrO9y3p.png",o="/previews/PR319/assets/uppvumi.ciUf9wiw.png",k="/previews/PR319/assets/znzuylj.DauhNG7p.png",v=JSON.parse('{"title":"Raster data (with Rasters.jl)","description":"","frontmatter":{},"headers":[],"relativePath":"examples/rasters.md","filePath":"examples/rasters.md","lastUpdated":null}'),d={name:"examples/rasters.md"};function g(c,s,E,u,m,y){return t(),i("div",null,s[0]||(s[0]=[e('<h1 id="Raster-data-with-Rasters.jl" tabindex="-1">Raster data (with Rasters.jl) <a class="header-anchor" href="#Raster-data-with-Rasters.jl" aria-label="Permalink to &quot;Raster data (with Rasters.jl) {#Raster-data-with-Rasters.jl}&quot;">​</a></h1><img src="'+n+`"><p><a href="https://github.com/rafaqz/Rasters.jl" target="_blank" rel="noreferrer">Rasters.jl</a> is a Julia package designed for working with raster data. It provides tools to read, write, and manipulate raster datasets, which are commonly used in geographic information systems (GIS), remote sensing, and similar fields where grid data is prevalent. It&#39;s built on top of <a href="https://github.com/rafaqz/DimensionalData.jl" target="_blank" rel="noreferrer">DimensionalData.jl</a>, which also underpins e.g. <a href="https://github.com/JuliaDataCubes/YAXArrays.jl" target="_blank" rel="noreferrer">YAXArrays.jl</a>.</p><p>In general, any input that works with base Makie will work with GeoMakie in a GeoAxis!</p><p>First, we&#39;ll load Rasters.jl, RasterDataSources.jl which provides access to common datasets, and ArchGDAL.jl which Rasters.jl depends on to read files.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL</span></span></code></pre></div><p>We&#39;ll also load GeoMakie and CairoMakie to plot the data.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeoMakie, CairoMakie</span></span></code></pre></div><p>First, we can load a Raster from the <a href="https://www.earthenv.org" target="_blank" rel="noreferrer">EarthEnv</a> project, which represents habitat or ecosystem heterogeneity.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:homogeneity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># habitat homogeneity to neighbouring pixel</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌ 1728×696 Raster{Union{Missing, UInt16}, 2} homogeneity ┐</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────┴─────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} -180.0:0.20833333333333334:179.79166666666669 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} 84.79166666666667:-0.20833333333333334:-60.0 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span>  Metadata{Rasters.GDALsource} of Dict{String, Any} with 1 entry:</span></span>
<span class="line"><span>  &quot;filepath&quot; =&gt; &quot;/home/runner/.julia/artifacts/EarthEnv/HabitatHeterogeneity/25…</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 180.00000000000003), Y = (-60.0, 85.0))</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.25722...</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →    84.7917    84.5833    …  -59.5833    -59.7917    -60.0</span></span>
<span class="line"><span> -180.0      missing    missing        missing     missing     missing</span></span>
<span class="line"><span> -179.792    missing    missing        missing     missing     missing</span></span>
<span class="line"><span>    ⋮                            ⋱                ⋮         </span></span>
<span class="line"><span>  179.375    missing    missing        missing     missing     missing</span></span>
<span class="line"><span>  179.583    missing    missing        missing     missing     missing</span></span>
<span class="line"><span>  179.792    missing    missing        missing     missing     missing</span></span></code></pre></div><p>Let&#39;s take a look at this in regular Makie first:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ras; axis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; aspect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DataAspect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span></code></pre></div><p><img src="`+p+'" alt="" width="600px" height="450px"></p><p>We can plot this in any projection (but heatmap only works over a projection in CairoMakie, for all other backends use <code>surface</code> instead):</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig, ga, hm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ras; axis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeoAxis))</span></span></code></pre></div><p><img src="'+l+`" alt="" width="600px" height="450px"></p><p>We can also change the projection arbitrarily:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ga</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dest[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;+proj=ortho +lon_0=19 +lat_0=72&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+h+`" alt="" width="600px" height="450px"></p><p>and all other Makie keyword arguments and attributes also apply!</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colormap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :isoluminant_cgo_70_c39_n256</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+r+`" alt="" width="600px" height="450px"></p><p>You can also use other recipes like surface:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); ga </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> surface!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ga, ras)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+o+`" alt="" width="600px" height="450px"></p><p>This looks a bit strange - but you can always disable shading:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shading </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NoShading</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+k+'" alt="" width="600px" height="450px"></p><p>See also the Geostationary image and Multiple CRS examples, where we explore how to plot data in different projections.</p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>',32)]))}const C=a(d,[["render",g]]);export{v as __pageData,C as default};
